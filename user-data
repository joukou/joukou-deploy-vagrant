#cloud-config

coreos:
  etcd:
    addr: $public_ipv4:4001
    peer-addr: $public_ipv4:7001
  fleet:
    public-ip: $public_ipv4
    metadata: provider=vagrant
  units:
    # https://github.com/coreos/coreos-cloudinit/issues/156
    - name: systemd-sysctl.service
      command: restart
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
    - name: settimezone.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Set the timezone

        [Service]
        ExecStart=/usr/bin/timedatectl set-timezone Pacific/Auckland
        RemainAfterExit=yes
        Type=oneshot
    - name: rudder-install.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Rudder overlay network installation
        Documentation=https://github.com/coreos/rudder
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStart=/bin/bash -c 'if [[ ! -a /opt/bin/rudder ]]; then docker run -v /opt/bin:/target -i -t google/golang /bin/bash -c "git clone https://github.com/coreos/rudder.git && cd rudder && ./build && cp bin/rudder /target/"; fi'
        RemainAfterExit=yes
        Type=oneshot

        [Install]
        WantedBy=multi-user.target
write_files:
  - path: /home/core/.dockercfg
    owner: core:core
    permissions: 0644
    content: |
      {
        "https://quay.io/v1/": {
          "auth": "am91a291K2NvcmVvczoyR01GVVFaTzFLVFgyNDdQUkJMMDRVS05MNk1PRExSVDI2UTVPNjZNWUlXTjRWMUIwSjBCRFdPMkVKWFRYMllU",
          "email": ""
        }
      }
  - path: /root/.dockercfg
    owner: root:root
    permissions: 0644
    content: |
      {
        "https://quay.io/v1/": {
          "auth": "am91a291K2NvcmVvczoyR01GVVFaTzFLVFgyNDdQUkJMMDRVS05MNk1PRExSVDI2UTVPNjZNWUlXTjRWMUIwSjBCRFdPMkVKWFRYMllU",
          "email": ""
        }
      }
  - path: /etc/hosts
    owner: root:root
    permissions: 0644
    content: |
      127.0.0.1       localhost localhost.localdomain
      ::1             localhost localhost.localdomain
  # Basho Riak minimally sufficient network settings to improve many aspects of
  # Riak usage on Linux.
  # See: http://docs.basho.com/riak/2.0.0/ops/tuning/linux/#Kernel-and-Network-Tuning
  - path: /etc/sysctl.d/10-net.conf
    owner: root:root
    permissions: 0644
    content: |
      net.ipv4.tcp_max_syn_backlog = 40000
      net.core.somaxconn = 40000
      net.ipv4.tcp_sack = 1
      net.ipv4.tcp_window_scaling = 1
      net.ipv4.tcp_fin_timeout = 15
      net.ipv4.tcp_keepalive_intvl = 30
      net.ipv4.tcp_tw_reuse = 1
      net.ipv4.tcp_moderate_rcvbuf = 1
  # vm.max_map_count
  # The maximum number of memory map areas a process may have. Memory map areas
  # are used as a side-effect of calling malloc, directly by mmap and mprotect,
  # and also when loading shared libraries.
  #
  # ElasticSearch uses a hybrid mmapfs / niofs directory by default to store its
  # indices. The default limits on mmap counts is too low, which may result in
  # out of memory exceptions.
  # See: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup-configuration.html#vm-max-map-count
  #
  # vm.dirty_background_bytes
  # Contains the amount of dirty memory at which the background kernel flusher
  # threads will start writeback.
  #
  # vm.dirty_bytes
  # Contains the amount of dirty memory at which a process generating disk
  # writes will itself start writeback.
  #
  # Basho Riak and ElasticSearch makes heavy use of disk I/O for storage
  # operations. The following dirty memory settings help prevent disks from
  # being overwhelmed during periods of high write activity at the expense of
  # peak performance for spiky workloads.
  - path: /etc/sysctl.d/10-vm.conf
    owner: root:root
    permissions: 0644
    content: |
      vm.max_map_count = 262144
      vm.dirty_bytes = 209715200
      vm.dirty_background_bytes = 104857600
